n_train_envs: 16
env_max_steps: &env_max_steps 200
eval_period: `40 * env_max_steps`
eval_n_episodes: &eval_n_episodes 10


# Environment and problem settings
action_space: &action_space !ContinuousUnicycleActionSpace
  lb: (0., -2.826)
  ub: (2., 2.826)  # 0.9 * pi
  normalize: true


curriculum: &curriculum !SequentialCurriculum
  agents_samplers:
    - !RobotOnlySampler
      sampling_square: (12, 12)
      min_robot_goal_distance: 5.
    - !RandomAgentsSampler
      n_peds: (4, 8)
      sampling_square: (12, 12)
      min_robot_goal_distance: 5.
      ped_linear_vels: (1., 2.3)
  problem_samplers:
    - !RandomProblemSampler
      ped_model: "hsfm"
      robot_visible: false
      detector_range: 5.
      detector_fov: 360.
      goal_reach_threshold: 0.1
      max_steps: 100
    - !RandomProblemSampler
      ped_model: "hsfm"
      robot_visible: false
      detector_range: 5.
      detector_fov: 360.
      goal_reach_threshold: 0.1
      max_steps: 200
  stages:
    - ("no_ped", 1.)
    - ("random_ped", 0.8)
  n_eval_episodes: `eval_n_episodes + 1`  # Hack for the stable-baselines3 evaluation pipeline


# Reward function
reward: &reward !BranchReward
  success_reward: 10.
  fail_reward: -20.
  step_reward: !CompositeReward
    rewards:
      - !PotentialGoalReward
        coefficient: 2.
      - !AngularVelocityPenalty
        coefficient: 0.005
      - !BasicPredictionPenalty
        factor: 20.
  truncated_is_fail: false


# Environment
train_env_factory: !SocialNavGraphEnvFactory
  action_space_config: *action_space
  sim_config: !SimConfig
    render: false
  curriculum: *curriculum
  tracker_factory: !CovarianceNetTrackerFactory
    horizon: 5
    max_ghost_tracking_time: 3
    device: "cuda"
  reward: *reward
  peds_padding: 8


# RL model
feature_extractor: !&PoolingGraphExtractor
feature_extractor_kwargs:
  embedding_dim: 128

rl_model: !&PPO
#rl_model_params:
#  policy_kwargs:
#    activation_fn: "tanh"
#    net_arch:
#      pi: [256, 128, 32]
#      vf: [256, 128, 32]


# Logging
logger: !ConsoleLogger
#logger: !NeptuneLogger
#  neptune_project: "timeescaper/soc-nav-rl"
